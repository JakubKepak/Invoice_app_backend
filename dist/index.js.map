{"version":3,"sources":["../src/index.js"],"names":["process","env","NODE_ENV","require","config","server","ApolloServer","typeDefs","resolvers","mongoose","connect","MONGO_CONNECTION_STRING","useNewUrlParser","then","console","log","listen","port","PORT","res","url"],"mappings":";;AAAA;;AACA;;AAEA;;AACA;;;;AAEA,IAAIA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,EAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;AACD;;AAED,IAAMC,MAAM,GAAG,IAAIC,0BAAJ,CAAiB;AAC9BC,EAAAA,QAAQ,EAARA,oBAD8B;AAE9BC,EAAAA,SAAS,EAATA;AAF8B,CAAjB,CAAf;;AAKAC,qBACGC,OADH,CACWV,OAAO,CAACC,GAAR,CAAYU,uBADvB,EACgD;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CADhD,EAEGC,IAFH,CAEQ,YAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SAAOV,MAAM,CAACW,MAAP,CAAc;AAAEC,IAAAA,IAAI,EAAEjB,OAAO,CAACC,GAAR,CAAYiB,IAAZ,IAAoB;AAA5B,GAAd,CAAP;AACD,CALH,EAMGL,IANH,CAMQ,UAACM,GAAD,EAAS;AACbL,EAAAA,OAAO,CAACC,GAAR,qCAAyCI,GAAG,CAACC,GAA7C;AACD,CARH","sourcesContent":["import { ApolloServer } from \"apollo-server\";\r\nimport mongoose from \"mongoose\";\r\n\r\nimport typeDefs from \"./models/typeDefs\";\r\nimport resolvers from \"./models/resolvers\";\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  require(\"dotenv\").config();\r\n}\r\n\r\nconst server = new ApolloServer({\r\n  typeDefs,\r\n  resolvers,\r\n});\r\n\r\nmongoose\r\n  .connect(process.env.MONGO_CONNECTION_STRING, { useNewUrlParser: true })\r\n  .then(() => {\r\n    console.log(\"db connected\");\r\n    return server.listen({ port: process.env.PORT || 5000 });\r\n  })\r\n  .then((res) => {\r\n    console.log(`Server is running on port ${res.url}`);\r\n  });\r\n"],"file":"index.js"}